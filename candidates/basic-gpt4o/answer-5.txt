It's great to hear that your team has successfully transitioned to using microservices and Kubernetes, as these technologies can indeed enhance deployment speed and scalability. However, as you've noticed, technical advancements don't always directly translate into improved user experiences. Here are some strategies to refocus your team and ensure that your technical efforts lead to tangible user benefits:

1. **User-Centric Metrics**: Start by identifying and tracking metrics that directly impact user experience, such as page load times, responsiveness, and error rates. Tools like Google Lighthouse can help you measure these aspects. Ensure that your team understands the importance of these metrics and how they relate to user satisfaction.

2. **Performance Budgets**: Establish performance budgets that set limits on acceptable load times and resource usage. This will help your team prioritize performance improvements and make informed trade-offs during development.

3. **Feedback Loops**: Create a robust feedback loop with your users. Regularly gather user feedback through surveys, usability testing, and direct interactions. Use this feedback to guide your development priorities and ensure that you're addressing real user pain points.

4. **Cross-Functional Collaboration**: Encourage collaboration between developers, designers, and product managers to ensure that technical decisions align with user needs. This can help bridge the gap between technical improvements and user experience enhancements.

5. **Incremental Improvements**: Focus on making incremental improvements that can be quickly tested and validated with users. This agile approach allows you to iterate based on real-world feedback and continuously enhance the user experience.

6. **Root Cause Analysis**: When users report issues, conduct a thorough root cause analysis to understand whether they stem from technical limitations, design flaws, or other factors. This will help you address the underlying problems rather than just the symptoms.

7. **Education and Awareness**: Educate your team about the importance of user experience and how their work impacts it. Share success stories and case studies that demonstrate the value of user-focused development.

8. **Align Goals with User Outcomes**: Ensure that your team's goals and KPIs are aligned with user outcomes. For example, instead of just measuring deployment speed, also track how these deployments improve user satisfaction or engagement.

By refocusing your team on these areas, you can ensure that your technical advancements lead to meaningful improvements in performance and usability for your users. Remember, the ultimate goal is to create a seamless and enjoyable experience for your users, and every technical decision should be made with that in mind.
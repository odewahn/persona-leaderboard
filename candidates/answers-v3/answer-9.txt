Absolutely, and thank you for your candor—struggling with feedback is a common challenge for new engineering managers, and it’s a skill that pays dividends for both your team’s growth and your own leadership journey. Drawing from my experience and the frameworks I’ve shared in Leading Effective Engineering Teams and recent discussions on Tech Leadership Tuesday, here’s a practical, research-backed approach to help you level up your feedback skills:

1. Make Feedback Regular, Structured, and Actionable
Establish a Feedback Rhythm: Don’t wait for annual reviews. Use regular one-on-ones, peer reviews, and sprint retrospectives as built-in opportunities for feedback. This normalizes feedback and reduces anxiety around it, making it a tool for growth rather than a source of stress .
Be Specific and Actionable: Vague feedback (“do better next time”) is rarely helpful. Instead, cite concrete examples and focus on observable behaviors. For instance, “In the last code review, I noticed you caught a critical bug—great attention to detail. One area to work on is documenting your thought process so others can follow your logic more easily” .
Balance Positive and Constructive Feedback: Recognize strengths and achievements, not just areas for improvement. This keeps motivation high and ensures feedback is seen as supportive, not punitive .
2. Tailor Feedback to the Individual
Understand Individual Needs: Each team member has unique goals, learning styles, and sensitivities. Adapt your feedback style accordingly—some may prefer directness, others may need more context or encouragement .
Ask for Input: Invite your team to share how they prefer to receive feedback. This builds trust and psychological safety, which are foundational for effective teams .
3. Foster a Culture of Continuous Improvement
Encourage Peer Feedback: Create opportunities for team members to review each other’s work. This not only distributes the feedback load but also builds a culture of shared learning and accountability .
Use Retrospectives Effectively: At the end of each sprint or project phase, facilitate a team discussion on what went well and what could be improved. This collective reflection helps normalize feedback and makes it a team habit .
4. Follow Up and Support Growth
Check In on Progress: Feedback shouldn’t be a one-off event. Revisit previous feedback in future one-on-ones, celebrate improvements, and offer additional guidance as needed. This shows you’re invested in their development .
Provide Resources and Opportunities: If someone needs to develop a skill, point them to relevant resources or stretch assignments. Feedback is most effective when paired with support .
5. Model Openness and Vulnerability
Seek Feedback Yourself: Ask your team for feedback on your own management style. This demonstrates humility and a commitment to growth, and it encourages a two-way feedback culture .
Acknowledge Uncertainty: Especially in fast-changing environments (like those shaped by generative AI), be transparent about what you know and what you’re still figuring out. This builds trust and psychological safety .
Quick Reference Table
Strategy	How to Apply It	Why It Works
Regular, structured feedback	1:1s, peer reviews, retrospectives	Normalizes feedback, reduces stress
Specific and actionable	Cite examples, focus on behaviors	Makes feedback useful and clear
Balance positive/constructive	Recognize strengths and areas for growth	Maintains motivation
Tailor to the individual	Adapt style, ask for preferences	Increases receptivity
Foster peer feedback	Encourage code reviews, team discussions	Builds shared accountability
Follow up and support	Revisit feedback, offer resources	
rives real improvementnness feedback, show vulnerability trust and safety